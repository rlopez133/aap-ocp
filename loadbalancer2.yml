---
- name: Self-service LB
  hosts: localhost
  become: false
  gather_facts: false
  collections:
    - kubernetes.core
    - community.aws
    - ansible.utils
    - community.general
    
  tasks:
  - name: Ensure LoadBalancer Service is avail, otherwise create
    kubernetes.core.k8s:
      state: present
      definition:
        apiVersion: v1
        kind: Service
        metadata:
          name: "{{ name | default('loadbalancer') }}"
          namespace: "{{ namespace }}"
        spec:
          type: LoadBalancer
          ports:
          - port: "{{ port | default(8080) }}"
            targetPort: "{{ target_port | default(8080) }}"
          selector:
            name: "{{ name | default('loadbalancer') }}"

  - name: Get a list of all service objects
    kubernetes.core.k8s_info:
      api_version: v1
      kind: Service
      name: "{{ name | default('loadbalancer') }}"
      namespace: "{{ namespace }}"
    register: loadbalancer
  
  - name: flatten complex object
    ansible.builtin.set_fact:
      paths: "{{ lookup('ansible.utils.to_paths', loadbalancer) }}"
      
  - name: Create route53 entry for the load balancer
    community.aws.route53:
      state: present
      zone: "{{ domain }}"
      record: "{{ paths['resources[0].metadata.name'] }}-{{ namespace }}.{{ domain }}"
      type: CNAME
      ttl: 60
      value: "{{ paths['resources[0].status.loadBalancer.ingress[0].hostname'] }}"
    
  - name: Identify the route
    kubernetes.core.k8s:
      state: present
      definition:
        apiVersion: route.openshift.io/v1
        kind: Route
        metadata:
          name: "{{ name | default('loadbalancer') }}"
          namespace: "{{ namespace }}"
        spec:
          to:
            kind: Service
            name: "{{ name | default('loadbalancer') }}"
          host: "{{ paths['resources[0].metadata.name'] }}-{{ namespace }}.{{ domain }}"
